{"version":3,"file":"index.js","sources":["../node_modules/@stdlib/math-base-assert-is-nan/lib/main.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/\nfunction isnan( x ) {\n\treturn ( x !== x );\n}\n\n\n// EXPORTS //\n\nexport default isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan';\n\n\n// MAIN //\n\n/**\n* Returns the positive difference between `x` and `y` if `x > y`; otherwise, returns `0`.\n*\n* @param {number} x - first number\n* @param {number} y - second number\n* @returns {number} positive difference\n*\n* @example\n* var v = pdiff( 5.9, 3.14 );\n* // returns 2.76\n*\n* @example\n* var v = pdiff( 3.14, 4.2 );\n* // returns 0.0\n*\n* @example\n* var v = pdiff( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = pdiff( -0.0, +0.0 );\n* // returns +0.0\n*/\nfunction pdiff( x, y ) {\n\tif ( isnan( x ) || isnan( y ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x > y ) {\n\t\treturn x - y;\n\t}\n\treturn 0.0;\n}\n\n\n// EXPORTS //\n\nexport default pdiff;\n"],"names":["isnan","x","y","NaN"],"mappings":";yCAoCA,SAASA,EAAOC,GACf,OAASA,GAAMA,CAChB,QCYA,SAAgBA,EAAGC,GAClB,OAAKF,EAAOC,IAAOD,EAAOE,GAClBC,IAEHF,EAAIC,EACDD,EAAIC,EAEL,CACR"}